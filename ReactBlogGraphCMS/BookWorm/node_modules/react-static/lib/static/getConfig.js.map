{"version":3,"sources":["../../src/static/getConfig.js"],"names":["defaultConfig","DEFAULT_NAME_FOR_STATIC_CONFIG_FILE","DEFAULT_PATH_FOR_STATIC_CONFIG","nodePath","resolve","join","process","cwd","DEFAULT_ROUTES","path","DEFAULT_ENTRY","DEFAULT_EXTENSIONS","buildConfig","config","sync","paths","root","src","dist","temp","buildArtifacts","devDist","public","plugins","pages","nodeModules","assets","resolvePath","relativePath","DIST","env","REACT_STATIC_ENV","ASSETS","ROOT","LOCAL_NODE_MODULES","SRC","PAGES","PLUGINS","TEMP","BUILD_ARTIFACTS","PUBLIC","NODE_MODULES","EXCLUDE_MODULES","excludeResolvedModules","PACKAGE","HTML_TEMPLATE","STATIC_DATA","siteRoot","basePath","devBasePath","REACT_STATIC_STAGING","stagingSiteRoot","stagingBasePath","publicPath","assetsPath","DEFAULT_ENTRY_PATH","entry","resolveModule","getSiteData","prefetchRate","maxThreads","Infinity","disableRoutePrefixing","outputFileRate","extensions","getRoutes","minLoadTime","disablePreload","disableRuntime","preloadPollInterval","babelExcludes","extractCssChunks","inlineCss","REACT_STATIC_MIN_LOAD_TIME","REACT_STATIC_PREFETCH_RATE","REACT_STATIC_DISABLE_ROUTE_PREFIXING","REACT_STATIC_DISABLE_PRELOAD","REACT_STATIC_DISABLE_RUNTIME","REACT_STATIC_PRELOAD_POLL_INTERVAL","REACT_STATIC_TEMPLATES_PATH","REACT_STATIC_PLUGINS_PATH","REACT_STATIC_UNIVERSAL_PATH","require","resolvePlugin","originalLocation","options","Array","isArray","location","fs","pathExistsSync","found","includes","err","NODE_ENV","reduce","prev","curr","Error","nodeLocation","browserLocation","getHooks","default","resolvedPlugin","hooks","map","console","error","configHook","buildConfigFromPath","configPath","cache","getConfig","subscription","resolvedPath","noConfig","executeBuildConfig","Promise","chokidar","watch","on","ext","find"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-dynamic-require */\n\nimport nodePath from 'path'\nimport chokidar from 'chokidar'\nimport resolveFrom from 'resolve-from'\nimport fs from 'fs-extra'\n\nimport getDirname from '../utils/getDirname'\nimport {\n  cleanSlashes,\n  cutPathToRoot,\n  isAbsoluteUrl,\n  makeHookReducer,\n} from '../utils'\n\n// the default static.config.js location\nconst defaultConfig = {}\nconst DEFAULT_NAME_FOR_STATIC_CONFIG_FILE = 'static.config'\nconst DEFAULT_PATH_FOR_STATIC_CONFIG = nodePath.resolve(\n  nodePath.join(process.cwd(), DEFAULT_NAME_FOR_STATIC_CONFIG_FILE)\n)\nconst DEFAULT_ROUTES = [{ path: '/' }]\nconst DEFAULT_ENTRY = 'index'\nconst DEFAULT_EXTENSIONS = ['.js', '.jsx']\n\nexport const buildConfig = (config = {}, { sync } = {}) => {\n  // path defaults\n  config.paths = {\n    root: nodePath.resolve(process.cwd()),\n    src: 'src',\n    dist: 'dist',\n    temp: 'tmp',\n    buildArtifacts: 'artifacts',\n    devDist: 'tmp/dev-server',\n    public: 'public',\n    plugins: 'plugins',\n    pages: 'src/pages',\n    nodeModules: 'node_modules',\n    assets: '',\n    ...(config.paths || {}),\n  }\n\n  // Use the root to resolve all other relative paths\n  const resolvePath = relativePath =>\n    nodePath.resolve(config.paths.root, relativePath)\n\n  // Resolve all paths\n  const DIST =\n    process.env.REACT_STATIC_ENV === 'development'\n      ? resolvePath(config.paths.devDist || config.paths.dist)\n      : resolvePath(config.paths.dist)\n\n  const ASSETS = nodePath.resolve(DIST, config.paths.assets)\n\n  const paths = {\n    ROOT: config.paths.root,\n    LOCAL_NODE_MODULES: nodePath.resolve(getDirname(), '../../node_modules'),\n    SRC: resolvePath(config.paths.src),\n    PAGES: resolvePath(config.paths.pages),\n    DIST,\n    ASSETS,\n    PLUGINS: resolvePath(config.paths.plugins),\n    TEMP: resolvePath(config.paths.temp),\n    BUILD_ARTIFACTS: resolvePath(config.paths.buildArtifacts),\n    PUBLIC: resolvePath(config.paths.public),\n    NODE_MODULES: resolvePath(config.paths.nodeModules),\n    EXCLUDE_MODULES:\n      config.paths.excludeResolvedModules ||\n      resolvePath(config.paths.nodeModules),\n    PACKAGE: resolvePath('package.json'),\n    HTML_TEMPLATE: nodePath.join(DIST, 'index.html'),\n    STATIC_DATA: nodePath.join(ASSETS, 'staticData'),\n  }\n\n  let siteRoot = ''\n  let basePath = ''\n\n  if (process.env.REACT_STATIC_ENV === 'development') {\n    basePath = cleanSlashes(config.devBasePath)\n  } else if (process.env.REACT_STATIC_STAGING === 'true') {\n    siteRoot = cutPathToRoot(config.stagingSiteRoot, '$1')\n    basePath = cleanSlashes(config.stagingBasePath)\n  } else {\n    siteRoot = cutPathToRoot(config.siteRoot, '$1')\n    basePath = cleanSlashes(config.basePath)\n  }\n\n  const publicPath = `${cleanSlashes(`${siteRoot}/${basePath}`)}/`\n\n  let assetsPath = cleanSlashes(config.assetsPath || paths.assets)\n  if (assetsPath && !isAbsoluteUrl(assetsPath)) {\n    assetsPath = `/${cleanSlashes(`${basePath}/${assetsPath}`)}/`\n  }\n\n  // Add the project root as a plugin. This allows the dev\n  // to use the plugin api directory in their project if they want\n  const plugins = [...(config.plugins || []), paths.ROOT]\n\n  const DEFAULT_ENTRY_PATH = nodePath.join(paths.SRC, DEFAULT_ENTRY)\n\n  // Defaults\n  config = {\n    // Defaults\n    entry:\n      resolveModule(DEFAULT_ENTRY_PATH, config) || `${DEFAULT_ENTRY_PATH}.js`,\n    getSiteData: () => ({}),\n    prefetchRate: 5,\n    maxThreads: Infinity,\n    disableRoutePrefixing: false,\n    outputFileRate: 100,\n    extensions: DEFAULT_EXTENSIONS,\n    getRoutes: async () => DEFAULT_ROUTES,\n    minLoadTime: 200,\n    disablePreload: false,\n    disableRuntime: false,\n    preloadPollInterval: 300,\n    // Config Overrides\n    ...config,\n    // Materialized Overrides\n    plugins,\n    paths,\n    babelExcludes: config.babelExcludes || [],\n    siteRoot,\n    basePath,\n    publicPath,\n    assetsPath,\n    extractCssChunks: config.extractCssChunks || false,\n    inlineCss: config.inlineCss || false,\n  }\n\n  // Set env variables to be used client side\n  process.env.REACT_STATIC_MIN_LOAD_TIME = config.minLoadTime\n  process.env.REACT_STATIC_PREFETCH_RATE = config.prefetchRate\n  process.env.REACT_STATIC_DISABLE_ROUTE_PREFIXING =\n    config.disableRoutePrefixing\n  process.env.REACT_STATIC_DISABLE_PRELOAD = config.disablePreload\n  process.env.REACT_STATIC_DISABLE_RUNTIME = config.disableRuntime\n  process.env.REACT_STATIC_PRELOAD_POLL_INTERVAL = config.preloadPollInterval\n\n  process.env.REACT_STATIC_TEMPLATES_PATH = nodePath.join(\n    paths.BUILD_ARTIFACTS,\n    'react-static-templates.js'\n  )\n  process.env.REACT_STATIC_PLUGINS_PATH = nodePath.join(\n    paths.BUILD_ARTIFACTS,\n    'react-static-browser-plugins.js'\n  )\n  process.env.REACT_STATIC_UNIVERSAL_PATH = require.resolve(\n    'react-universal-component'\n  )\n\n  const resolvePlugin = originalLocation => {\n    let options = {}\n    if (Array.isArray(originalLocation)) {\n      options = originalLocation[1] || {}\n      originalLocation = originalLocation[0]\n    }\n\n    const location = [\n      () => {\n        // Absolute\n        if (fs.pathExistsSync(originalLocation)) {\n          return originalLocation\n        }\n      },\n      () => {\n        // Absolute require\n        try {\n          const found = require.resolve(originalLocation)\n          return found.includes('.') ? nodePath.resolve(found, '../') : found\n        } catch (err) {\n          //\n        }\n      },\n      () => {\n        // Plugins Dir\n        const found = nodePath.resolve(paths.PLUGINS, originalLocation)\n        if (fs.pathExistsSync(found)) {\n          return found\n        }\n      },\n      () => {\n        // Plugins Dir require\n        try {\n          const found = resolveFrom(paths.PLUGINS, originalLocation)\n          return found.includes('.') ? nodePath.resolve(found, '../') : found\n        } catch (err) {\n          //\n        }\n      },\n      () => {\n        // CWD\n        const found = nodePath.resolve(process.cwd(), originalLocation)\n        if (fs.pathExistsSync(found)) {\n          return found\n        }\n      },\n      () => {\n        // CWD require\n        try {\n          const found = resolveFrom(process.cwd(), originalLocation)\n          return found.includes('.') ? nodePath.resolve(found, '../') : found\n        } catch (err) {\n          //\n        }\n      },\n      () => {\n        if (process.env.NODE_ENV === 'test') {\n          // Allow plugins to be mocked\n          return 'mock-plugin'\n        }\n      },\n    ].reduce((prev, curr) => prev || curr(), null)\n\n    // TODO: We have to do this because we don't have a good mock for process.cwd() :(\n    if (!location) {\n      throw new Error(\n        `Oh crap! Could not find a plugin directory for the plugin: \"${originalLocation}\". We must bail!`\n      )\n    }\n\n    const nodeLocation = resolveModule(\n      nodePath.join(location, 'node.api'),\n      config\n    )\n    const browserLocation = resolveModule(\n      nodePath.join(location, 'browser.api'),\n      config\n    )\n    let getHooks = () => ({})\n\n    try {\n      // Get the hooks for the node api\n      if (nodeLocation) {\n        getHooks = require(nodeLocation).default\n      }\n\n      const resolvedPlugin = {\n        location,\n        nodeLocation,\n        browserLocation,\n        options,\n        hooks: getHooks(options) || {},\n      }\n\n      // Recursively resolve plugins\n      if (resolvedPlugin.plugins) {\n        resolvedPlugin.plugins = resolvedPlugin.plugins.map(resolvePlugin)\n      }\n\n      return resolvedPlugin\n    } catch (err) {\n      console.error(\n        `The following error occurred in the plugin located at \"${nodeLocation}\"`\n      )\n      throw err\n    }\n  }\n\n  config.plugins = config.plugins.map(resolvePlugin)\n\n  const configHook = makeHookReducer(config.plugins, 'config', { sync })\n  return configHook(config)\n}\n\nconst buildConfigFromPath = (configPath, options) => {\n  delete require.cache[configPath]\n  const config = require(configPath).default\n  return buildConfig(config, options)\n}\n// Retrieves the static.config.js from the current project directory\nexport default (function getConfig(\n  configPath = DEFAULT_PATH_FOR_STATIC_CONFIG,\n  subscription,\n  options = {}\n) {\n  const resolvedPath = resolveModule(configPath)\n\n  const noConfig =\n    configPath === DEFAULT_PATH_FOR_STATIC_CONFIG && !resolvedPath\n\n  const executeBuildConfig = () =>\n    noConfig\n      ? buildConfig(defaultConfig, options)\n      : buildConfigFromPath(resolvedPath || configPath, options)\n\n  if (!subscription) {\n    return executeBuildConfig()\n  }\n\n  // If subscribing, return a never ending promise\n  // Note: All subscriptions will be handled async\n  return new Promise(async () =>\n    noConfig\n      ? subscription(await executeBuildConfig())\n      : chokidar\n          .watch(resolvedPath)\n          .on('all', async () => subscription(await executeBuildConfig()))\n  )\n})\n\nfunction resolveModule(path, config) {\n  try {\n    // Load any module extension that is supported by Node (.js, .mjs, .node, etc),\n    // or that have been registered via Node require hooks (.jsx, .ts, etc)\n    return require.resolve(path)\n  } catch {\n    // Fallback to the extensions that have been registered with Babel\n    const extensions = (config && config.extensions) || DEFAULT_EXTENSIONS\n    return extensions.map(ext => path + ext).find(fs.pathExistsSync)\n  }\n}\n"],"file":"getConfig.js"}