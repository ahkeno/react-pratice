{"version":3,"sources":["../../../src/browser/components/RouteData.js"],"names":["instances","process","env","REACT_STATIC_ENV","global","reloadAll","forEach","instance","safeForceUpdate","RouteData","unmounted","forceUpdate","push","filter","d","props","children","Loader","routePath","routeError","routeErrorByPath","routeInfo","routeInfoByPath","data","Error","shouldLoadData","targetRouteInfoPath","path","Promise","all","priority","resolve","setTimeout","REACT_STATIC_MIN_LOAD_TIME","routeData","React","Component","Spinner","shouldLoadSharedData","hasPropHashes","sharedData","sharedHashesByProp","Object","keys","length","withRouteData","Comp","opts"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { prefetch, routeInfoByPath, routeErrorByPath } from '../'\nimport Spinner from './Spinner'\nimport { withStaticInfo } from './StaticInfo'\nimport { withRoutePathContext } from './Routes'\nimport { getFullRouteData } from '../utils'\n\nlet instances = []\n\nif (process.env.REACT_STATIC_ENV === 'development') {\n  global.reloadAll = () => {\n    instances.forEach(instance => instance.safeForceUpdate())\n  }\n}\n\nconst RouteData = withStaticInfo(\n  withRoutePathContext(\n    class RouteData extends React.Component {\n      static defaultProps = {\n        Loader: Spinner,\n      }\n      componentDidMount() {\n        instances.push(this)\n      }\n      componentWillUnmount() {\n        instances = instances.filter(d => d !== this)\n        this.unmounted = true\n      }\n      safeForceUpdate = () => {\n        if (this.unmounted) {\n          return\n        }\n        this.forceUpdate()\n      }\n      render() {\n        const { children, Loader, routePath } = this.props\n\n        const routeError = routeErrorByPath[routePath]\n        const routeInfo = routeError\n          ? routeInfoByPath['404']\n          : routeInfoByPath[routePath]\n\n        // If there was an error reported for this path, throw an error\n        // unless there is data for the 404 page\n        if (routeError && (!routeInfo || !routeInfo.data)) {\n          throw new Error(\n            `React-Static: <RouteData> could not find any data for this route: ${routePath}. If this is a dynamic route, please remove any reliance on RouteData or withRouteData from this routes components`\n          )\n        }\n\n        // If we haven't requested the routeInfo and its shared data yet, or it's loading\n        // Show a spinner and prefetch the data\n        // TODO:suspense - This will become a suspense resource\n        if (shouldLoadData(routeInfo)) {\n          // To make sure route info will be fetched for 404 pages we should use the returned route info path (if any) instead of the original path\n          const targetRouteInfoPath = routeInfo ? routeInfo.path : routePath\n          ;(async () => {\n            await Promise.all([\n              prefetch(targetRouteInfoPath, { priority: true }),\n              new Promise(resolve =>\n                setTimeout(resolve, process.env.REACT_STATIC_MIN_LOAD_TIME)\n              ),\n            ])\n            this.safeForceUpdate()\n          })()\n          return <Loader />\n        }\n\n        // Otherwise, get it from the routeInfoByPath (subsequent client side)\n        // and merge it with the shared data\n        const routeData = getFullRouteData(routeInfo)\n\n        return children(routeData)\n      }\n    }\n  )\n)\n\nfunction shouldLoadData(routeInfo) {\n  if (!routeInfo || !routeInfo.data) {\n    return true\n  }\n\n  return shouldLoadSharedData(routeInfo)\n}\n\nfunction shouldLoadSharedData(routeInfo) {\n  return hasPropHashes(routeInfo) && !routeInfo.sharedData\n}\n\nfunction hasPropHashes(routeInfo) {\n  return (\n    routeInfo.sharedHashesByProp &&\n    Object.keys(routeInfo.sharedHashesByProp).length > 0\n  )\n}\n\nexport default RouteData\n\nexport function withRouteData(Comp, opts = {}) {\n  return props => (\n    <RouteData {...opts}>\n      {routeData => <Comp {...routeData} {...props} />}\n    </RouteData>\n  )\n}\n"],"file":"RouteData.js"}